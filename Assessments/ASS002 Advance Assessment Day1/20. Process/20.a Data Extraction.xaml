<Activity mc:Ignorable="sap sap2010" x:Class="_20_a_Data_Extraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:umae="clr-namespace:UiPath.Mail.Activities.Enums;assembly=UiPath.Mail.Activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="idictAssets" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="idtLogFile" Type="InArgument(sd:DataTable)" />
    <x:Property Name="idtExtractedData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="ilstmailMessages" Type="InArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="ijobjRegex" Type="InArgument(njl:JObject)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>_20_a_Data_Extraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Services.RuntimeAnalyze</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Enums</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="_20_a_Data_Extraction" sap:VirtualizedContainerService.HintSize="895.2,1752.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="lstAccountNickNames" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="breBusinessException" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Sequence For Data Extraction" sap:VirtualizedContainerService.HintSize="620.8,1729.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="intUniqueID" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign Unique ID" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[intUniqueID]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[CInt(idictAssets("ASS002 - Unique ID"))]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each mail in lstmailMessages" sap:VirtualizedContainerService.HintSize="587.2,1314.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ilstmailMessages]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="snm:MailMessage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="currentMailMessage" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Action to perform on each mail" sap:VirtualizedContainerService.HintSize="553.6,1168" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strBodyText" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Catch if any exception occurs while Data Extraction on each mail" sap:VirtualizedContainerService.HintSize="520,1108" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Sequence For Data Extraction Through Each Mail" sap:VirtualizedContainerService.HintSize="483.2,853.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SaveMailAttachments Attachments="{x:Null}" ResourceAttachments="{x:Null}" DisplayName="Save All Email Attachments" ExcludeInlineAttachments="False" FolderPath="[idictAssets(&quot;ASS002 - Path to store Attachments&quot;).ToString]" sap:VirtualizedContainerService.HintSize="449.6,56.8" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[currentMailMessage]" OverwriteExisting="True">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SaveMailAttachments>
                    <ui:ForEachFileX DisplayName="For Each Attachment in Attachments Folder - CSV" Filter="*.xlsx" Folder="[idictAssets(&quot;ASS002 - Path to store Attachments&quot;).ToString]" sap:VirtualizedContainerService.HintSize="449.6,518.4" sap2010:WorkflowViewState.IdRef="ForEachFileX_4" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Action to perform on each attachment" sap:VirtualizedContainerService.HintSize="416,221.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dtAttachment" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ReadRange Range="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[dtAttachment]" DisplayName="Read Excel Attachment" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="[idictAssets(&quot;ASS002 - Attachment CSV Sheet Name&quot;).ToString]" WorkbookPath="[CurrentFile.FullName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ReadRange>
                            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtAttachment]" DisplayName="For Each Row in CSV Attachment" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="drCurrentRow" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Action to perform on each datarow of csv" sap:VirtualizedContainerService.HintSize="467.2,1153.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="strTaxPercent" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign tax percentage" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strTaxPercent]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[If(CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &lt;= 100, "0%", If(CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &gt; 100 AndAlso CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &lt;= 300, "5%", If(CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &gt; 300 AndAlso CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &lt;= 500, "10%", If(CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &gt; 500 AndAlso CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &lt;= 700, "15%", If(CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &gt; 700 AndAlso CInt(drCurrentRow("Income with Tax").ToString.Split("$")(1)) &lt;= 100000, "20%", "")))))]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{drCurrentRow(&quot;Email Id&quot;).ToString(), &#xA;drCurrentRow(&quot;First Name&quot;).ToString(), &#xA;drCurrentRow(&quot;Last Name&quot;).ToString(), &#xA;drCurrentRow(&quot;Age&quot;).ToString(), &#xA;drCurrentRow(&quot;Loan amount&quot;).ToString(), &#xA;drCurrentRow(&quot;Income with Tax&quot;).ToString(), &#xA;drCurrentRow(&quot;Loan term&quot;).ToString(), &#xA;drCurrentRow(&quot;Account type&quot;).ToString(), &#xA;intUniqueID.ToString(), &#xA;strTaxPercent, &#xA;&quot;$&quot;+(CDbl(drCurrentRow(&quot;Income with Tax&quot;).ToString().Replace(&quot;$&quot;,&quot;&quot;)) - CDbl(drCurrentRow(&quot;Income with Tax&quot;).ToString.Replace(&quot;$&quot;,&quot;&quot;)) * CDbl(strTaxPercent.Replace(&quot;%&quot;, &quot;&quot;)) / 100).ToString()}]" DataTable="[idtExtractedData]" DisplayName="Add DR in Extracted Data" sap:VirtualizedContainerService.HintSize="433.6,220" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{drCurrentRow(&quot;Email Id&quot;).ToString(), &#xA;drCurrentRow(&quot;First Name&quot;).ToString(), &#xA;drCurrentRow(&quot;Last Name&quot;).ToString(), &#xA;drCurrentRow(&quot;Age&quot;).ToString(), &#xA;drCurrentRow(&quot;Loan amount&quot;).ToString(), &#xA;drCurrentRow(&quot;Income with Tax&quot;).ToString(), &#xA;drCurrentRow(&quot;Loan term&quot;).ToString(), &#xA;drCurrentRow(&quot;Account type&quot;).ToString(), &#xA;intUniqueID.ToString(), &#xA;strTaxPercent, &#xA;&quot;$&quot;+(CDbl(drCurrentRow(&quot;Income with Tax&quot;).ToString().Replace(&quot;$&quot;,&quot;&quot;)) - CDbl(drCurrentRow(&quot;Income with Tax&quot;).ToString.Replace(&quot;$&quot;,&quot;&quot;)) * CDbl(strTaxPercent.Replace(&quot;%&quot;, &quot;&quot;)) / 100).ToString(),&#xA;DateTime.Now.ToString,&#xA;&quot;Success&quot;}]" DataTable="[idtLogFile]" DisplayName="Add DR in LogFile" sap:VirtualizedContainerService.HintSize="433.6,220" sap2010:WorkflowViewState.IdRef="AddDataRow_4">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <Assign DisplayName="Increment of Unique ID" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[intUniqueID]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[intUniqueID+1]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Print Extracted Data" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Extracted Data : &quot;+drCurrentRow(&quot;Email Id&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;First Name&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Last Name&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Age&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Loan amount&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Income with Tax&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Loan term&quot;).ToString+&quot; ; &quot;+drCurrentRow(&quot;Account type&quot;).ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:LogMessage>
                                    <ui:AppendRange WorkbookPathResource="{x:Null}" DataTable="[idtLogFile]" DisplayName="Append LogFile" sap:VirtualizedContainerService.HintSize="433.6,148" sap2010:WorkflowViewState.IdRef="AppendRange_8" SheetName="[idictAssets(&quot;ASS002 - LogFile Excel Sheet&quot;).ToString]" WorkbookPath="[idictAssets(&quot;ASS002 - LogFile Excel Path&quot;).ToString]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AppendRange>
                                    <ui:ClearDataTable DataTable="[idtLogFile]" DisplayName="Clear LogFile DT" sap:VirtualizedContainerService.HintSize="433.6,104" sap2010:WorkflowViewState.IdRef="ClearDataTable_7">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ClearDataTable>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <ui:DeleteFileX DisplayName="Delete File to stop Data Redundancy" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="DeleteFileX_4" Path="[CurrentFile.FullName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:DeleteFileX>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                    <ui:ForEachFileX DisplayName="For Each Attachment in Attachments Folder - PDF" Filter="*.pdf" Folder="[idictAssets(&quot;ASS002 - Path to store Attachments&quot;).ToString]" sap:VirtualizedContainerService.HintSize="449.6,56.8" sap2010:WorkflowViewState.IdRef="ForEachFileX_5" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Action to perform on each attachment" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="strPdfText" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch DisplayName="Try Catch If any exception occurs In PDF Data Extraction" sap:VirtualizedContainerService.HintSize="433.6,210.4" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence DisplayName="Sequence For Data Extraction From PDF" sap:VirtualizedContainerService.HintSize="534.4,307.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Attachment Text" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="500.8,56.8" sap2010:WorkflowViewState.IdRef="ReadPDFText_3" Range="All" Text="[strPdfText]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ReadPDFText>
                                  <Assign DisplayName="Reset BRE Exception Var" sap:VirtualizedContainerService.HintSize="500.8,56.8" sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[breBusinessException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <If Condition="[strPdfText Is Nothing]" DisplayName="Check if PDF is empty" sap:VirtualizedContainerService.HintSize="500.8,948" sap2010:WorkflowViewState.IdRef="If_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Store the BRE exception" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign the BRE Exception to var" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_18">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[breBusinessException]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("Pdf is Empty..")]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else Extract Data" sap:VirtualizedContainerService.HintSize="416,621.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each varName As JProperty In ijobjRegex.Item(&quot;pdfText&quot;)&#xD;&#xA;&#x9;Dim varObject As JToken = varName.Value&#xD;&#xA;&#x9;For Each i As JProperty In varObject&#xD;&#xA;&#x9;&#x9;Dim varRegexList As JToken = i.Value&#xD;&#xA;&#x9;&#x9;For Each regex As JToken In varRegexList.Children()&#xD;&#xA;&#x9;&#x9;&#x9;Dim regexMatch As New System.Text.RegularExpressions.Regex(regex.ToString)&#xD;&#xA;&#x9;&#x9;&#x9;For Each M As System.Text.RegularExpressions.Match In regexMatch.Matches(istrPdfText)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strFirstName As String = If(M.Groups(&quot;firstname&quot;).Success,M.Groups(&quot;firstname&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLastName As String = If(M.Groups(&quot;lastname&quot;).Success,M.Groups(&quot;lastname&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strEmail As String = If(M.Groups(&quot;email&quot;).Success,M.Groups(&quot;email&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strAge As String = If(M.Groups(&quot;age&quot;).Success,M.Groups(&quot;age&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLoanAmount As String = If(M.Groups(&quot;loanamount&quot;).Success,M.Groups(&quot;loanamount&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strIncomeWithTax As String = If(M.Groups(&quot;incomewithtax&quot;).Success,M.Groups(&quot;incomewithtax&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLoanTerm As String = If(M.Groups(&quot;loanterm&quot;).Success,M.Groups(&quot;loanterm&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strAccountType As String = If(M.Groups(&quot;accounttype&quot;).Success,M.Groups(&quot;accounttype&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strTaxRate As String = If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 100, &quot;0%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 100 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 300, &quot;5%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 300 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 500, &quot;10%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 500 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 700, &quot;15%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 700 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 100000, &quot;20%&quot;, &quot;&quot;)))))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Extracted Data : &quot;+strEmail.Trim+&quot; ; &quot;+strFirstName.Trim+&quot; ; &quot;+strLastName.Trim+&quot; ; &quot;+strAge.Trim+&quot; ; &quot;+strLoanAmount.Trim+&quot; ; &quot;+strIncomeWithTax.Trim+&quot; ; &quot;+strLoanTerm.Trim+&quot; ; &quot;+strAccountType.Trim)&#xD;&#xA;&#x9;&#x9;&#x9;iodtLogFile.Rows.Add(strEmail.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strFirstName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLastName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAge.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanAmount.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strIncomeWithTax.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanTerm.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAccountType.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iointUniqueID.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strTaxRate,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;$&quot;+(CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))-CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))*CDbl(strTaxRate.Replace(&quot;%&quot;,&quot;&quot;))/100).ToString(),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateTime.Now.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If(iobreBusinessException Is Nothing,&quot;Success&quot;,iobreBusinessException.Message))&#xD;&#xA;&#x9;&#x9;&#x9;iodtExtractedData.Rows.Add(strEmail.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strFirstName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLastName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAge.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanAmount.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strIncomeWithTax.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanTerm.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAccountType.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iointUniqueID.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strTaxRate,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;$&quot;+(CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))-CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))*CDbl(strTaxRate.Replace(&quot;%&quot;,&quot;&quot;))/100).ToString())&#xD;&#xA;&#x9;&#x9;    iointUniqueID = iointUniqueID+1&#xD;&#xA;&#x9;&#x9;&#x9;Next&#xD;&#xA;&#x9;&#x9;Next&#xD;&#xA;&#x9;Next&#xD;&#xA;Next" DisplayName="Invoke Code For Data Extraction" sap:VirtualizedContainerService.HintSize="382.4,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
                                          <ui:InvokeCode.Arguments>
                                            <InArgument x:TypeArguments="njl:JObject" x:Key="ijobjRegex">
                                              <VisualBasicValue x:TypeArguments="njl:JObject" ExpressionText="ijobjRegex" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="istrPdfText">
                                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strPdfText" />
                                            </InArgument>
                                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="iodtLogFile">
                                              <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="idtLogFile" />
                                            </InOutArgument>
                                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="iodtExtractedData">
                                              <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="idtExtractedData" />
                                            </InOutArgument>
                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="iointUniqueID">
                                              <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="intUniqueID" />
                                            </InOutArgument>
                                            <InOutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="iobreBusinessException">
                                              <VisualBasicReference x:TypeArguments="ui:BusinessRuleException" ExpressionText="breBusinessException" />
                                            </InOutArgument>
                                          </ui:InvokeCode.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeCode>
                                        <ui:AppendRange WorkbookPathResource="{x:Null}" DataTable="[idtLogFile]" DisplayName="Append LogFile" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="AppendRange_9" SheetName="[idictAssets(&quot;ASS002 - LogFile Excel Sheet&quot;).ToString]" WorkbookPath="[idictAssets(&quot;ASS002 - LogFile Excel Path&quot;).ToString]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:AppendRange>
                                        <ui:ClearDataTable DataTable="[idtLogFile]" DisplayName="Clear LogFile DT" sap:VirtualizedContainerService.HintSize="382.4,112.8" sap2010:WorkflowViewState.IdRef="ClearDataTable_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ClearDataTable>
                                        <ui:DeleteFileX DisplayName="Delete File to stop Data Redundancy" sap:VirtualizedContainerService.HintSize="382.4,104" sap2010:WorkflowViewState.IdRef="DeleteFileX_5" Path="[CurrentFile.FullName]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:DeleteFileX>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="400,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Print BRE Exception" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[exception.Message]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:LogMessage>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                    <Assign DisplayName="If Data is in Body Part" sap:VirtualizedContainerService.HintSize="449.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBodyText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[currentMailMessage.Body]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign DisplayName="Reset BRE Exception to Nothing" sap:VirtualizedContainerService.HintSize="449.6,56.8" sap2010:WorkflowViewState.IdRef="Assign_19">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[breBusinessException]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If Condition="[strBodyText Is Nothing]" DisplayName="Checks if Mail Body is Empty or Not" sap:VirtualizedContainerService.HintSize="449.6,48" sap2010:WorkflowViewState.IdRef="If_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="If no Text in Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign the BRE Exception to var" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[breBusinessException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("Mail Body Is Empty")]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="If Text Found in Body" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each varName As JProperty In ijobjRegex.Item(&quot;pdfText&quot;)&#xD;&#xA;&#x9;Dim varObject As JToken = varName.Value&#xD;&#xA;&#x9;For Each i As JProperty In varObject&#xD;&#xA;&#x9;&#x9;Dim varRegexList As JToken = i.Value&#xD;&#xA;&#x9;&#x9;For Each regex As JToken In varRegexList.Children()&#xD;&#xA;&#x9;&#x9;&#x9;Dim regexMatch As New System.Text.RegularExpressions.Regex(regex.ToString)&#xD;&#xA;&#x9;&#x9;&#x9;For Each M As System.Text.RegularExpressions.Match In regexMatch.Matches(istrBodyText)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strFirstName As String = If(M.Groups(&quot;firstname&quot;).Success,M.Groups(&quot;firstname&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLastName As String = If(M.Groups(&quot;lastname&quot;).Success,M.Groups(&quot;lastname&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strEmail As String = If(M.Groups(&quot;email&quot;).Success,M.Groups(&quot;email&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strAge As String = If(M.Groups(&quot;age&quot;).Success,M.Groups(&quot;age&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLoanAmount As String = If(M.Groups(&quot;loanamount&quot;).Success,M.Groups(&quot;loanamount&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strIncomeWithTax As String = If(M.Groups(&quot;incomewithtax&quot;).Success,M.Groups(&quot;incomewithtax&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strLoanTerm As String = If(M.Groups(&quot;loanterm&quot;).Success,M.Groups(&quot;loanterm&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strAccountType As String = If(M.Groups(&quot;accounttype&quot;).Success,M.Groups(&quot;accounttype&quot;).Value.Trim,String.Empty)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim strTaxRate As String = If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 100, &quot;0%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 100 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 300, &quot;5%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 300 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 500, &quot;10%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 500 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 700, &quot;15%&quot;, If(CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &gt; 700 AndAlso CInt(strIncomeWithTax.Split(&quot;$&quot;)(1)) &lt;= 100000, &quot;20%&quot;, &quot;&quot;)))))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Extracted Data : &quot;+strEmail.Trim+&quot; ; &quot;+strFirstName.Trim+&quot; ; &quot;+strLastName.Trim+&quot; ; &quot;+strAge.Trim+&quot; ; &quot;+strLoanAmount.Trim+&quot; ; &quot;+strIncomeWithTax.Trim+&quot; ; &quot;+strLoanTerm.Trim+&quot; ; &quot;+strAccountType.Trim)&#xD;&#xA;&#x9;&#x9;&#x9;iodtLogFile.Rows.Add(strEmail.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strFirstName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLastName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAge.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanAmount.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strIncomeWithTax.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanTerm.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAccountType.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iointUniqueID.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strTaxRate,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;$&quot;+(CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))-CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))*CDbl(strTaxRate.Replace(&quot;%&quot;,&quot;&quot;))/100).ToString(),&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DateTime.Now.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If(iobreBusinessException Is Nothing,&quot;Success&quot;,iobreBusinessException.Message))&#xD;&#xA;&#x9;&#x9;&#x9;iodtExtractedData.Rows.Add(strEmail.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strFirstName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLastName.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAge.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanAmount.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strIncomeWithTax.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strLoanTerm.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strAccountType.Trim,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;iointUniqueID.ToString,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;strTaxRate,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;$&quot;+(CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))-CDbl(strIncomeWithTax.Replace(&quot;$&quot;,&quot;&quot;))*CDbl(strTaxRate.Replace(&quot;%&quot;,&quot;&quot;))/100).ToString())&#xD;&#xA;&#x9;&#x9;    iointUniqueID = iointUniqueID+1&#xD;&#xA;&#x9;&#x9;&#x9;Next&#xD;&#xA;&#x9;&#x9;Next&#xD;&#xA;&#x9;Next&#xD;&#xA;Next" DisplayName="Invoke Code For Data Extraction" sap:VirtualizedContainerService.HintSize="382.4,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="njl:JObject" x:Key="ijobjRegex">
                                <VisualBasicValue x:TypeArguments="njl:JObject" ExpressionText="ijobjRegex" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="istrBodyText">
                                <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strBodyText" />
                              </InArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="iodtLogFile">
                                <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="idtLogFile" />
                              </InOutArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="iodtExtractedData">
                                <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="idtExtractedData" />
                              </InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="iointUniqueID">
                                <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="intUniqueID" />
                              </InOutArgument>
                              <InOutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="iobreBusinessException">
                                <VisualBasicReference x:TypeArguments="ui:BusinessRuleException" ExpressionText="breBusinessException" />
                              </InOutArgument>
                            </ui:InvokeCode.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeCode>
                          <ui:AppendRange WorkbookPathResource="{x:Null}" DataTable="[idtLogFile]" DisplayName="Append LogFile" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="AppendRange_10" SheetName="[idictAssets(&quot;ASS002 - LogFile Excel Sheet&quot;).ToString]" WorkbookPath="[idictAssets(&quot;ASS002 - LogFile Excel Path&quot;).ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AppendRange>
                          <ui:ClearDataTable DataTable="[idtLogFile]" DisplayName="Clear LogFile DT" sap:VirtualizedContainerService.HintSize="382.4,104" sap2010:WorkflowViewState.IdRef="ClearDataTable_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ClearDataTable>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="486.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Print BRE Exception" sap:VirtualizedContainerService.HintSize="200,40.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[exception.Message]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:ReadRange Range="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[idtLogFile]" DisplayName="Reading LogFile" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[idictAssets(&quot;ASS002 - LogFile Excel Sheet&quot;).ToString]" WorkbookPath="[idictAssets(&quot;ASS002 - LogFile Excel Path&quot;).ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[idtLogFile]" DisplayName="For Each Data in LogFile" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Action to perfrom on each Row" sap:VirtualizedContainerService.HintSize="416,164.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strNickName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Account NickName" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strNickName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentRow("First Name").ToString+CurrentRow("Last Name").ToString+CurrentRow("Email Id").ToString]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <If Condition="[lstAccountNickNames.Contains(strNickName)]" DisplayName="Check if NickName already exists in List or not" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="If NickName Already Exists" sap:VirtualizedContainerService.HintSize="467.2,339.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Prints Account Already exists" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Account already exists for : &quot;+strNickName]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <Assign DisplayName="Update the account creation status" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[CurrentRow("Account Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Account Already Exists"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else Create an Account" sap:VirtualizedContainerService.HintSize="534.4,1746.4" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[lstAccountNickNames]" DisplayName="Append Items to List of NickNames" sap:VirtualizedContainerService.HintSize="500.8,173.6" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_1">
                      <uasc:AppendItemToCollection.Items>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[strNickName]</InArgument>
                        </scg:List>
                      </uasc:AppendItemToCollection.Items>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uasc:AppendItemToCollection>
                    <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Edge UiBank-Apply" sap:VirtualizedContainerService.HintSize="500.8,1512.8" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="e6956f9d-b28b-47d9-87cf-b3d19cbb3331" Version="V2">
                      <uix:NApplicationCard.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Action to perform after opening apply account page" sap:VirtualizedContainerService.HintSize="467.2,1272.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Type Into 'Give a Nickname to Your…'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="433.6,286.4" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="e6956f9d-b28b-47d9-87cf-b3d19cbb3331" Text="[strNickName]" Version="V4">
                              <uix:NTypeInto.Target>
                                <uix:TargetAnchorable BrowserURL="uibank.uipath.com/accounts/account-apply" CVScreenId="adb54f2c-df57-45be-9541-a777a0535860" ContentHash="NgeQkQnbb0ygHpXXp6YQ2g" DesignTimeRectangle="459, 712, 1000, 68" DesignTimeScaleFactor="1.25" ElementType="InputBox" FullSelectorArgument="&lt;webctrl id='accountNickname' tag='INPUT' aaname='Give a Nickname to Your Account' /&gt;" Guid="79d97a82-1373-4418-a527-354a35479170" InformativeScreenshot="ebebf1e85352310b434095710373bbaa.png" IsResponsive="True" Reference="OclIRvzfskaWuKJAow1iKQ/TQW2qBuni0-eM1CTrMmAbQ" ScopeSelectorArgument="&lt;html app='msedge.exe' title='UiBank-Apply' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive">
                                  <uix:TargetAnchorable.Anchors>
                                    <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                      <uix:Target CVScreenId="adb54f2c-df57-45be-9541-a777a0535860" CvTextArea="457, 690, 236, 15" CvTextArgument="Give a Nickname to Your Account" CvType="Text" DesignTimeRectangle="459, 689, 234, 23" ElementType="Text" FuzzySelectorArgument="&lt;webctrl tag='LABEL' type='' class='uibank-label' aaname='Give a Nickname to Your Account' check:innerText='Give a Nickname to Your Account' /&gt;" Guid="ea087514-936b-4a59-b119-99dde4af067b" SearchSteps="FuzzySelector, CV" />
                                    </scg:List>
                                  </uix:TargetAnchorable.Anchors>
                                </uix:TargetAnchorable>
                              </uix:NTypeInto.Target>
                              <uix:NTypeInto.VerifyOptions>
                                <uix:VerifyExecutionTypeIntoOptions DisplayName="{x:Null}" Mode="Appears">
                                  <uix:VerifyExecutionTypeIntoOptions.Retry>
                                    <InArgument x:TypeArguments="x:Boolean" />
                                  </uix:VerifyExecutionTypeIntoOptions.Retry>
                                  <uix:VerifyExecutionTypeIntoOptions.Timeout>
                                    <InArgument x:TypeArguments="x:Double" />
                                  </uix:VerifyExecutionTypeIntoOptions.Timeout>
                                </uix:VerifyExecutionTypeIntoOptions>
                              </uix:NTypeInto.VerifyOptions>
                            </uix:NTypeInto>
                            <uix:NSelectItem DisplayName="Select Item 'Type of Account' to Savings" sap:VirtualizedContainerService.HintSize="433.6,189.6" sap2010:WorkflowViewState.IdRef="NSelectItem_1" Item="Savings" ScopeIdentifier="e6956f9d-b28b-47d9-87cf-b3d19cbb3331" Version="V4">
                              <uix:NSelectItem.Items>
                                <scg:List x:TypeArguments="x:String" Capacity="2">
                                  <x:String>Checking</x:String>
                                  <x:String>Savings</x:String>
                                </scg:List>
                              </uix:NSelectItem.Items>
                              <uix:NSelectItem.Target>
                                <uix:TargetAnchorable BrowserURL="uibank.uipath.com/accounts/account-apply" CVScreenId="3545bf77-5270-4c6f-ac09-3ffd11aa5bb4" ContentHash="kuqOtW1CgEyfJx9b1PSfQQ" DesignTimeRectangle="459, 810, 1000, 68" DesignTimeScaleFactor="1.25" ElementType="DropDown" FullSelectorArgument="&lt;webctrl id='typeOfAccount' tag='SELECT' /&gt;" Guid="aaffec08-8d83-4ed3-a38a-d1f948aefebf" ImageBase64="" InformativeScreenshot="8110803e1f84b9d41da2782e5d5a4584.png" Reference="OclIRvzfskaWuKJAow1iKQ/lrTbSJQaaUuhKQcYcEdH5Q" ScopeSelectorArgument="&lt;html app='msedge.exe' title='UiBank-Apply' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive">
                                  <uix:TargetAnchorable.Anchors>
                                    <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                      <uix:Target CVScreenId="3545bf77-5270-4c6f-ac09-3ffd11aa5bb4" CvTextArea="457, 789, 115, 17" CvTextArgument="Type of Account" CvType="Text" DesignTimeRectangle="459, 787, 114, 24" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Type of Account' tag='LABEL' type='' class='uibank-label' check:innerText='Type of Account' /&gt;" Guid="a0a54303-45d8-4afe-9216-769bc2dcd315" SearchSteps="FuzzySelector, CV" />
                                    </scg:List>
                                  </uix:TargetAnchorable.Anchors>
                                </uix:TargetAnchorable>
                              </uix:NSelectItem.Target>
                            </uix:NSelectItem>
                            <uix:NClick ActivateBefore="True" ClickType="Single" DelayAfter="[CDbl(idictAssets(&quot;ASS002 - Delay Time&quot;))]" DisplayName="Click 'Apply'" sap:VirtualizedContainerService.HintSize="433.6,225.6" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="e6956f9d-b28b-47d9-87cf-b3d19cbb3331" Version="V4">
                              <uix:NClick.Target>
                                <uix:TargetAnchorable BrowserURL="uibank.uipath.com/accounts/account-apply" CVScreenId="3545bf77-5270-4c6f-ac09-3ffd11aa5bb4" ContentHash="VyWuAvHr50aUiEO3fnZQDg" DesignTimeRectangle="659, 918, 600, 61" DesignTimeScaleFactor="1.25" ElementType="Button" FullSelectorArgument="&lt;webctrl tag='BUTTON' type='submit' aaname='Apply' /&gt;" Guid="a9a788e6-02dc-4316-b18e-09da28604dad" InformativeScreenshot="1f054122370913dd4ad1125553133f9d.png" Reference="OclIRvzfskaWuKJAow1iKQ/wOiQB2yb-EqhIAFqs7KAqw" ScopeSelectorArgument="&lt;html app='msedge.exe' title='UiBank-Apply' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive" />
                              </uix:NClick.Target>
                              <uix:NClick.VerifyOptions>
                                <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                  <uix:VerifyExecutionOptions.Retry>
                                    <InArgument x:TypeArguments="x:Boolean" />
                                  </uix:VerifyExecutionOptions.Retry>
                                  <uix:VerifyExecutionOptions.Timeout>
                                    <InArgument x:TypeArguments="x:Double" />
                                  </uix:VerifyExecutionOptions.Timeout>
                                </uix:VerifyExecutionOptions>
                              </uix:NClick.VerifyOptions>
                            </uix:NClick>
                            <ui:LogMessage DisplayName="Prints Account Created" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Account Created Successfully for : &quot;+strNickName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <Assign DisplayName="Assign the account creation status to success" sap:VirtualizedContainerService.HintSize="433.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[CurrentRow("Account Status")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["Created"]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[idictAssets(&quot;ASS002 - Account Email&quot;).ToString]" Body="[&quot;Hello &quot;+CurrentRow(&quot;First Name&quot;).ToString+&quot;,&quot;+vbCrLf+&#xA;&quot;Your Account For loan application has been created On &quot;+DateTime.Now.ToString+vbCrLf+&#xA;&quot;This Is the unique ID For further communication &quot;+intUniqueID.ToString+vbCrLf+&#xA;&quot;We will be communicating you soon On the loan application status.&quot;+vbCrLf+&#xA;&quot;Thanks&quot;+vbCrLf+&#xA;&quot;Harsh Ranjan&quot;]" ConnectionMode="LegacyConfiguration" DisplayName="Send Mail If Account Created" sap:VirtualizedContainerService.HintSize="433.6,219.2" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="False" IsDraft="True" Sensitivity="Normal" Subject="Account Created Successfully" To="[CurrentRow(&quot;Email Id&quot;).ToString]" UseISConnection="False">
                              <ui:SendOutlookMail.ConnectionDetailsBackupSlot>
                                <usau:BackupSlot x:TypeArguments="umae:ConnectionDetails" StoredValue="{x:Null}">
                                  <usau:BackupSlot.BackupValues>
                                    <scg:Dictionary x:TypeArguments="umae:ConnectionDetails, scg:List(x:Object)" />
                                  </usau:BackupSlot.BackupValues>
                                </usau:BackupSlot>
                              </ui:SendOutlookMail.ConnectionDetailsBackupSlot>
                              <ui:SendOutlookMail.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </ui:SendOutlookMail.Files>
                            </ui:SendOutlookMail>
                          </Sequence>
                        </ActivityAction>
                      </uix:NApplicationCard.Body>
                      <uix:NApplicationCard.TargetApp>
                        <uix:TargetApp Area="-9, -9, 1938, 1038" BrowserType="Edge" ContentHash="gWEo-Kj1P0KzuGuk_Jj76Q" IconBase64="iVBORw0KGgoAAAANSUhEUgAAAJkAAACZCAMAAAALgmiIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAABgUExURfpGFvyMbv////7Rxf/z8PtpQv/5+PyumfyAX/x1UftjO/7WzP3Lvf25p/7o4vtdM/2/r/2dhPx6WP2zoPtXLP7u6fpMHf7i2vtvSfyokf7c0/yGZvpSJf2XfP3Ftvyiiq2qGj8AAAMiSURBVHhe7ZvplqIwEEbTwQ0dl3FBG1t5/7ecg7RCfRXQHJPJLN/9acXUFUIRpTTVn4ohhBBCCCHGmAtuk34fH+giWdlkZOgioZkDmvlDM39o5g/N/KGZP8nNRtkEX2pIa7bb3rJsdxhIbHY8PfKcjhhMabYrupk+MZzOrBRixiwgnsxsMoZUc7gSkpl9Yio8n8nM2tV/Zy0HJDP7wlSYLJXZATMZYzIxwstskUlGIqo5wvhO0XLlXXbf6xzRQZqtISo/pAa/zH60oRJCNT+6701mZqGa1ciKlswMy5kxX7KgJTO7QMyYcyea0myEk30dOtGUZiqzvDJ1HIhoBvcnOJdJzexi/oisZcWoSWlmJ9NZLTefTR077qRmN0p84Zv0Zn3Q7AbNaObmvzQbDNLsDs1o5oZmGKTZHZrRzA3NMEizOzSjmRuaYZBmd2hGMzc0w+C/Y9b+ft+Ajz2QweSDQV+zHKK+Zpeh4FtmM4hWIqrBTyLGBzXDyXzNRPsPTvaWGf65DSdDBtdlUDPs/hiLqGIEw+W1HNRsCdHC8SCrg5pbPCgPanbFcN/TrIYpDhdPfYOaqdOjWrMETdtbi2yvCWqmGgbmMiw5YOODzB3WTDUMYNNYF3UyZWEOa4aXgH763aIazJ4Ux/fMVhg3VzmgAxY/7OIKa6Z2G2bfVziOuMowdWAztdDM2N1QtVKfAQ9vYDN9Ot1qDjG8YQQ2U9uNev1scJDd7XGQMVMYE9rM1TdmTtfuapts8E5eoxZkaDNVbBuK2TLLSltm2RQr/zd4yMKbqXvnaxRqNQY3U9vB11CHLILZwbG6n4Jpo5g9e4sL7HyuiWCm7zvPKHSPfRwz76XmvLlGMRv1VAY3ha7ENVHM9LQD7Hv2cDhFIDP1NaqXMbR8PohlZjdql+Pk7LgqG6KZ2cPluVs+8GtRPDNrVzg5cBrwimtmbXnuP25bZ61oiWtWN8X+dOw+5hexL3IS3axecZuq2ub53ph1ns+qatl3OQqu8M94PMQhzOJAM39o5g/N/KGZPzTzh2b+0Mwfmvnz15qd8mQ4vl4QQggh5DV+AX8flQSKJaqiAAAAAElFTkSuQmCC" InformativeScreenshot="9a8396828cc0590c15331cd32ce7dbb0.jpg" Reference="OclIRvzfskaWuKJAow1iKQ/VbfyBoWbo02hd4sgKEFglg" Selector="&lt;html app='msedge.exe' title='UiBank-Apply' /&gt;" Title="UiBank-Apply" Url="https://uibank.uipath.com/accounts/account-apply" Version="V1" />
                      </uix:NApplicationCard.TargetApp>
                    </uix:NApplicationCard>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[idtLogFile]" DisplayName="Write Updated LogFile" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[idictAssets(&quot;ASS002 - LogFile Excel Sheet&quot;).ToString]" WorkbookPath="[idictAssets(&quot;ASS002 - LogFile Excel Path&quot;).ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteRange>
      <ui:BulkAddQueueItems TimeoutMS="{x:Null}" DisplayName="Adding All Extracted Data To Queue" FolderPath="Shared/ASS002" sap:VirtualizedContainerService.HintSize="587.2,56.8" sap2010:WorkflowViewState.IdRef="BulkAddQueueItems_1" QueueItemsDataTable="[idtExtractedData]" QueueName="ASS002 - Extracted Data">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BulkAddQueueItems>
      <ui:SetAsset TimeoutMS="{x:Null}" AssetName="ASS002 - Unique ID" DisplayName="Setting the value to asset" FolderPath="Shared/ASS002" sap:VirtualizedContainerService.HintSize="587.2,48" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[intUniqueID+1]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:SetAsset>
    </Sequence>
  </Sequence>
</Activity>